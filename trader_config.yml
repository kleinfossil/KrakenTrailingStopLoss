basic:
  book-storage-location: "books/"
  mail_key_file_location: "key_files/mail_info.yml"
  logs-location: "logs/"
  pretty_waiting_time: 0 # 1 will activate the pretty waiting time. However, this could create errors e.g. in a terminal based environment as it will continuously write print statements.

trading:
  supported_currencies: "XETHZEUR"
  waiting_time: 600
  position:
    base_currency: "XETH"
    quote_currency: "ZEUR"
  strategy: # 1 if this strategy is active. 0 if the strategy is inactive
    stop_loss:
      active: 1
      buy_price_offset: 1
      sell_price_offset: 1
      quote_currency_offset: 30
      config:
        standard_deviation_interval: "d" # Interval used to calculate the standard deviation. d=days, h=hours, m=minutes
        standard_deviation_history: 10 # how many epochs (days, hours, minutes) the standard deviation calculation should go back
        minmax_interval: "h" # Interval used to find the minimum or maximum value. d=days, h=hours, m=minutes
        minmax_history: 10 # How much history epochs should be used to find a minmax value.
        std_delta_min_difference: 2 # standard deviation difference between old and new. If the difference is smaller the delta will be set to 0
        std_minimum_value: 30 # Minimum Value the std must have. If the std ist below this value the std will be set to this value. Set it to 0 to avoid this function.

debugging:
  log-level: "ERROR" # Log Level must be equal or lower than file file_log_level.
  file_log_level: "ERROR"
  send_error_mails: 1 # Setting it to 1 will send error mails based on the mail_info.yml configuration
  use-fake-user-balance: 0 # 1 will use fake values, while 0 will get real values.
  kraken:
    make_trade: 1 # 1 will make a real trade, while 0 will use fake trade data.
    use_real_trading_data: 1 # 1 will use data as provided to the trade. 0 will overwrite this data with predefined fake data.
    make_real_query: 1 # 1 will make a real query. 0 will respond with fake data.
    kill_switch: "trade" # switch setup before every add trade, modify trade and cancel trade kraken call. If 'do_not_trade' then no request to kraken will be made. If 'trade' requests to kraken will be made.
    kraken_validation: 1 # If 0 the "validate" parameter of the kraken API will be set to "true". Means no trade will be made and kraken will just validate the transaction. If set to 1 it will make a real trade.

kraken_private:
  google:
    google-secrets: 0 # 1 will use secrets stored in google cloud while 0 will use secrets from the environment variable
    google-project-id: "250571186544" # can be found right at the details page of the secret under the headline
    google-key-name: "kraken-key"
    google-sec-name: "kraken-sec"
    google-secret-version: "latest"
  development_keys:
    key_location: "key_files/api_key_development.yml"
    key_version: 220922

kraken_trade:
  trade_requires_approval: 0 # 1 will have the trader wait for approval. 0 will not require a approval
  order_type: stop-loss-limit
  allowed_decimals:
    XETHZEUR:
      price_decimals: 2
      volume_decimals: 8
  minimum_order:
    XETHZEUR: 0.001
  fees:
    maker: 0.0026
    taker: 0.0016
  sleep_time_between_error_requests: 10 # Number of seconds to sleep in case Kraken does not respond on non-trading requests. Trading requests will always stop the program in case of an error.
  max_retries_error_requests: 5  # Number of times the program should try to retry a Kraken non-trading request. Trading requests (buy and sell) are never retried. Instead, if will through an error and stop the program.

book:
  till: "1629583200"


